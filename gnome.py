{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5873ec02-aafe-4ab5-b903-d528053c9dc9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yipzz thatz shitzz\n",
      "Wizard glibb a magic potion prezz a quest\n"
     ]
    }
   ],
   "source": [
    "# MEGA DICTIONARY: English to Gnome\n",
    "EN_TO_GNOME = {\n",
    "    # Greetings, phrases\n",
    "    \"hello\": \"glorbik\", \"hi\": \"gribby\", \"good morning\": \"blorn morzn\", \"good night\": \"blorn nizz\",\n",
    "    \"goodbye\": \"blornib\", \"see you soon\": \"glorr tu bliz\", \"how are you\": \"fropp tu\", \"i'm fine\": \"ik blonzy\",\n",
    "    \"what's up\": \"vobb ubb\", \"cheers\": \"bruzzik\", \"welcome\": \"blonkam\",\n",
    "    # People & professions\n",
    "    \"person\": \"blonson\", \"man\": \"grim\", \"woman\": \"glimma\", \"child\": \"sniblet\", \"friend\": \"blonfrib\",\n",
    "    \"enemy\": \"skraggfrib\", \"teacher\": \"blontraik\", \"student\": \"graddik\", \"worker\": \"blibworr\",\n",
    "    \"trader\": \"trinnokar\", \"miner\": \"blonmynn\", \"developer\": \"kodblib\", \"artist\": \"blonart\", \"singer\": \"blonsingk\",\n",
    "    \"leader\": \"chiefnik\",\n",
    "    # Emotions, states\n",
    "    \"proud\": \"pronnik\", \"jealous\": \"jellik\", \"nervous\": \"nervik\", \"bored\": \"snorby\", \"relaxed\": \"laxxik\",\n",
    "    \"scared\": \"skerrik\", \"surprised\": \"surprik\", \"confused\": \"confoozik\", \"embarrassed\": \"blushik\",\n",
    "    \"patient\": \"pashnik\", \"stubborn\": \"stubblik\", \"shy\": \"shynik\", \"happy\": \"zibble\", \"sad\": \"glumby\",\n",
    "    \"angry\": \"blurg\", \"excited\": \"zipzip\", \"tired\": \"flopty\", \"hungry\": \"ploggy\", \"thirsty\": \"glibby\",\n",
    "    \"lost\": \"wibby\", \"busy\": \"gribby\",\n",
    "    # Science & tech\n",
    "    \"science\": \"scibbl\", \"math\": \"matnik\", \"chemistry\": \"chemnik\", \"physics\": \"fiznik\", \"computer\": \"compik\",\n",
    "    \"software\": \"softwik\", \"hardware\": \"hardwik\", \"robot\": \"robblik\", \"internet\": \"netbik\", \"email\": \"emibb\",\n",
    "    \"phone\": \"fonnik\", \"battery\": \"battik\", \"code\": \"kodnik\", \"program\": \"progbrik\", \"data\": \"datnik\", \"virus\": \"viruzz\",\n",
    "    # Crypto, business, money\n",
    "    \"coin\": \"groink\", \"coins\": \"groinkzz\", \"wallet\": \"blimbor\", \"blockchain\": \"kladdock\", \"token\": \"flarn\",\n",
    "    \"bitcoin\": \"brizzcoin\", \"ethereum\": \"ethergrok\", \"solana\": \"solgrib\", \"pump\": \"yipzz\", \"dump\": \"flopzz\",\n",
    "    \"liquidity\": \"glibber\", \"trade\": \"trinnock\", \"buy\": \"boik\", \"sell\": \"sekk\", \"price\": \"prilz\", \"bullish\": \"glibbozz\",\n",
    "    \"bearish\": \"fluppozz\", \"scam\": \"skragg\", \"rugpull\": \"rugblok\", \"whale\": \"bloopk\", \"moon\": \"blupk\",\n",
    "    \"NFT\": \"nifft\", \"DEX\": \"zexblib\", \"meme coin\": \"plizzle\", \"chart\": \"chort\", \"market\": \"merkad\", \"money\": \"munnik\",\n",
    "    \"salary\": \"sallik\", \"tax\": \"taxik\", \"bill\": \"billik\", \"pay\": \"paynik\", \"bank\": \"bankik\", \"value\": \"valyik\",\n",
    "    \"debt\": \"debbik\", \"investment\": \"inviblik\", \"profit\": \"profik\", \"loss\": \"loosik\",\n",
    "    # Education & school\n",
    "    \"school\": \"skolnik\", \"class\": \"klassik\", \"lesson\": \"lessnik\", \"book\": \"bukkik\", \"homework\": \"homworrik\",\n",
    "    \"exam\": \"egzammik\", \"question\": \"questnik\", \"answer\": \"ansbrik\",\n",
    "    # Sports\n",
    "    \"sport\": \"sportik\", \"game\": \"gamik\", \"player\": \"plarnik\", \"team\": \"teemik\", \"ball\": \"ballik\", \"soccer\": \"fuballik\",\n",
    "    \"basketball\": \"hoopnik\", \"tennis\": \"tennik\", \"swim\": \"swimik\", \"run\": \"frizz\", \"jump\": \"jumplik\", \"win\": \"glibber\",\n",
    "    \"lose\": \"loosik\",\n",
    "    # Family & relationships\n",
    "    \"family\": \"famblik\", \"mother\": \"momnik\", \"father\": \"fadnik\", \"sister\": \"sistik\", \"brother\": \"brornik\",\n",
    "    \"son\": \"sonnib\", \"daughter\": \"dautnik\", \"uncle\": \"unkik\", \"aunt\": \"auntik\", \"cousin\": \"kuznik\", \"partner\": \"partnik\",\n",
    "    \"baby\": \"babblik\",\n",
    "    # Body, medical\n",
    "    \"head\": \"hednib\", \"face\": \"faznik\", \"eye\": \"eynik\", \"nose\": \"noznik\", \"mouth\": \"mouzik\", \"ear\": \"earnik\",\n",
    "    \"arm\": \"armnik\", \"hand\": \"handik\", \"leg\": \"legnik\", \"foot\": \"futnik\", \"heart\": \"hartik\", \"blood\": \"blodnik\",\n",
    "    \"doctor\": \"docnik\", \"nurse\": \"nursik\", \"hospital\": \"hospik\", \"sick\": \"siknik\", \"medicine\": \"medzik\", \"pain\": \"paynik\",\n",
    "    \"wound\": \"wunnik\",\n",
    "    # Places & transport\n",
    "    \"car\": \"clarn\", \"bus\": \"buzzik\", \"train\": \"tronn\", \"plane\": \"blaynik\", \"bike\": \"blonnik\", \"taxi\": \"taxnik\",\n",
    "    \"airport\": \"airpork\", \"station\": \"statnik\", \"port\": \"portnik\", \"bridge\": \"bridjik\", \"shop\": \"shoppik\",\n",
    "    \"park\": \"parnik\", \"cinema\": \"movik\", \"theater\": \"theatrik\", \"museum\": \"musnik\", \"library\": \"librik\",\n",
    "    \"restaurant\": \"restik\", \"bar\": \"pubbik\", \"street\": \"strib\", \"square\": \"squarik\", \"church\": \"chuchik\",\n",
    "    \"building\": \"buildik\",\n",
    "    # Nature, weather, directions\n",
    "    \"sun\": \"solbik\", \"moon\": \"blupk\", \"star\": \"starnik\", \"sky\": \"sklarn\", \"cloud\": \"cludd\", \"rain\": \"rainnik\",\n",
    "    \"snow\": \"snorflik\", \"wind\": \"whifnik\", \"mountain\": \"montik\", \"river\": \"ribblik\", \"forest\": \"fornik\",\n",
    "    \"flower\": \"flornik\", \"tree\": \"grobble\", \"leaf\": \"leevnik\", \"grass\": \"gribbl\", \"fire\": \"fyrnik\", \"earth\": \"urthik\",\n",
    "    \"stone\": \"snigg\", \"sand\": \"sandik\", \"north\": \"nornik\", \"south\": \"sornik\", \"east\": \"eaznik\", \"west\": \"weznik\",\n",
    "    \"ocean\": \"oshnik\", \"sea\": \"seanik\", \"lake\": \"laknik\", \"valley\": \"vallik\", \"island\": \"islnik\", \"desert\": \"desnik\",\n",
    "    # Food & drink\n",
    "    \"water\": \"plibnob\", \"coffee\": \"kaffik\", \"tea\": \"tezz\", \"beer\": \"bruzz\", \"bread\": \"blenn\", \"cheese\": \"chebble\",\n",
    "    \"meat\": \"snarn\", \"soup\": \"soopple\", \"fruit\": \"flom\", \"vegetable\": \"vobble\", \"apple\": \"applik\", \"banana\": \"bananik\",\n",
    "    \"orange\": \"oranjik\", \"grape\": \"grapnik\", \"potato\": \"potanik\", \"tomato\": \"tomatik\", \"onion\": \"onnik\",\n",
    "    \"carrot\": \"carik\", \"lettuce\": \"lettik\", \"chicken\": \"chikkik\", \"beef\": \"beefnik\", \"pork\": \"porkik\", \"egg\": \"eggnik\",\n",
    "    \"cake\": \"cakik\", \"chocolate\": \"chokkik\", \"salt\": \"salkik\", \"pepper\": \"peppik\",\n",
    "    # Animals\n",
    "    \"animal\": \"blonmal\", \"dog\": \"dawgik\", \"cat\": \"katnik\", \"bird\": \"birbik\", \"fish\": \"blonfin\", \"mouse\": \"mausnik\",\n",
    "    \"cow\": \"cownik\", \"horse\": \"hossik\", \"bear\": \"beryk\", \"wolf\": \"wolnik\", \"rabbit\": \"rabbik\", \"fox\": \"foxnik\",\n",
    "    \"snake\": \"snaknik\", \"dragon\": \"draggik\",\n",
    "    # Entertainment & media\n",
    "    \"music\": \"muzik\", \"song\": \"songnik\", \"sing\": \"singk\", \"dance\": \"dansik\", \"movie\": \"movik\", \"actor\": \"aktorik\",\n",
    "    \"television\": \"telvnik\", \"video\": \"vidik\", \"photo\": \"fotnik\", \"picture\": \"pictik\", \"art\": \"blonart\", \"draw\": \"drawnik\",\n",
    "    \"paint\": \"paintik\", \"read\": \"rednik\",\n",
    "    # Fantasy\n",
    "    \"wizard\": \"wizzik\", \"witch\": \"witchnik\", \"fairy\": \"fairnik\", \"dwarf\": \"dworvik\", \"elf\": \"elfnik\", \"goblin\": \"gobblik\",\n",
    "    \"troll\": \"trollik\", \"spell\": \"spellik\", \"potion\": \"potik\", \"sword\": \"swordik\", \"shield\": \"shielnik\",\n",
    "    \"castle\": \"caslik\", \"dungeon\": \"dungik\", \"quest\": \"questnik\", \"treasure\": \"treazik\",\n",
    "    # Slang & crypto memes\n",
    "    \"gm\": \"gmnorzn\", \"gn\": \"gnnizz\", \"wagmi\": \"wagmizz\", \"ngmi\": \"ngmizz\", \"fomo\": \"fommik\", \"fud\": \"fuddik\",\n",
    "    \"lfg\": \"luffgik\", \"rekt\": \"rektik\", \"shill\": \"shillik\", \"degen\": \"degenik\", \"snipe\": \"snipnik\", \"floor price\": \"florpilz\",\n",
    "    \"ath\": \"athnik\", \"bag holder\": \"baghldik\", \"dip\": \"dippik\",\n",
    "    # Time, numbers, colors, months\n",
    "    \"day\": \"dozz\", \"night\": \"nizz\", \"morning\": \"morzn\", \"evening\": \"evvyn\", \"hour\": \"hourb\", \"minute\": \"minnit\",\n",
    "    \"second\": \"sekkond\", \"week\": \"wekk\", \"month\": \"montek\", \"year\": \"yarr\",\n",
    "    \"january\": \"janik\", \"february\": \"febbik\", \"march\": \"marnik\", \"april\": \"aprik\", \"may\": \"maynik\", \"june\": \"junnik\",\n",
    "    \"july\": \"jullik\", \"august\": \"auggik\", \"september\": \"seppik\", \"october\": \"octik\", \"november\": \"novik\", \"december\": \"decik\",\n",
    "    \"monday\": \"modik\", \"tuesday\": \"tudik\", \"wednesday\": \"wednik\", \"thursday\": \"thurnik\", \"friday\": \"fridik\", \"saturday\": \"satnik\", \"sunday\": \"sundik\",\n",
    "    \"zero\": \"zerro\", \"one\": \"onib\", \"two\": \"doob\", \"three\": \"trebb\", \"four\": \"flubb\", \"five\": \"vibbl\", \"six\": \"sizz\", \"seven\": \"zevv\", \"eight\": \"aitt\", \"nine\": \"nizz\", \"ten\": \"tennib\",\n",
    "    \"eleven\": \"elvnik\", \"twelve\": \"twelbik\", \"thirteen\": \"tirtnik\", \"twenty\": \"twenib\", \"thirty\": \"thirtik\", \"forty\": \"fortik\", \"fifty\": \"fiftik\", \"hundred\": \"hundrik\", \"thousand\": \"thauzik\",\n",
    "    # Colors\n",
    "    \"red\": \"reddik\", \"orange\": \"ornjik\", \"yellow\": \"yelnik\", \"green\": \"grennik\", \"blue\": \"blunik\", \"purple\": \"purplik\",\n",
    "    \"pink\": \"pinkik\", \"black\": \"blakkik\", \"white\": \"wytik\", \"brown\": \"brunnik\", \"gray\": \"graynik\",\n",
    "    # Commands, misc\n",
    "    \"stop\": \"skriff\", \"go\": \"snorb\", \"come\": \"kommik\", \"wait\": \"waibb\", \"jump\": \"jumplik\", \"sit\": \"sittik\", \"stand\": \"standik\",\n",
    "    \"start\": \"starnik\", \"open\": \"opennik\", \"close\": \"closik\", \"look\": \"looknik\", \"listen\": \"lisnik\", \"thing\": \"thingnik\",\n",
    "    \"stuff\": \"stufnik\", \"place\": \"plasek\", \"reason\": \"reaznik\", \"secret\": \"secretnik\", \"magic\": \"magik\", \"legend\": \"legnik\", \"dream\": \"dreemik\",\n",
    "    # Function words\n",
    "    \"the\": \"blib\", \"a\": \"blib\", \"and\": \"gnar\", \"to\": \"\", \"is\": \"\", \"are\": \"\", \"of\": \"\", \"on\": \"\", \"in\": \"\", \"with\": \"\",\n",
    "    \"i\": \"ik\", \"you\": \"tu\", \"we\": \"wib\", \"they\": \"drim\", \"he\": \"gruk\", \"she\": \"gruk\", \"it\": \"gruk\", \"my\": \"mik\", \"your\": \"turk\",\n",
    "    \"his\": \"hisk\", \"her\": \"hirk\", \"their\": \"thirk\", \"our\": \"wurk\", \"this\": \"thiz\", \"that\": \"thatz\", \"for\": \"\", \"at\": \"\",\n",
    "    \"from\": \"\", \"by\": \"\", \"not\": \"snarf\", \"no\": \"snarf\", \"yes\": \"blorf\", \"please\": \"plizz\", \"thank you\": \"blunty\", \"thanks\": \"blunty\", \"sorry\": \"flintzy\", \"help\": \"gront\", \"who\": \"kloo\", \"what\": \"vobb\", \"when\": \"glimm\", \"where\": \"zrun\", \"why\": \"glurff\", \"how\": \"fropp\",\n",
    "\n",
    "    \"house\": \"domnik\",\n",
    "    \"apartment\": \"aparnik\",\n",
    "    \"room\": \"runnik\",\n",
    "    \"bed\": \"bednik\",\n",
    "    \"table\": \"tablik\",\n",
    "    \"chair\": \"charnik\",\n",
    "    \"window\": \"vindik\",\n",
    "    \"door\": \"dorrik\",\n",
    "    \"floor\": \"flornik\",\n",
    "    \"wall\": \"wallik\",\n",
    "    \"roof\": \"rofnik\",\n",
    "    \"kitchen\": \"kitchnik\",\n",
    "    \"bathroom\": \"bathnik\",\n",
    "    \"toilet\": \"toilnik\",\n",
    "    \"shower\": \"showernik\",\n",
    "    \"couch\": \"couchik\",\n",
    "    \"lamp\": \"lampik\",\n",
    "    \"light\": \"laitnik\",\n",
    "    \"mirror\": \"mirrik\",\n",
    "    \"clothes\": \"klothzz\",\n",
    "    \"shirt\": \"shertik\",\n",
    "    \"pants\": \"pantzz\",\n",
    "    \"shoes\": \"shuznik\",\n",
    "    \"sock\": \"sockik\",\n",
    "    \"coat\": \"kotnik\",\n",
    "    \"dress\": \"dresnik\",\n",
    "    \"hat\": \"hatnik\",\n",
    "    \"bag\": \"bagnik\",\n",
    "    \"key\": \"keeyik\",\n",
    "    \"phone\": \"fonnik\",\n",
    "    \"computer\": \"compik\",\n",
    "    \"mouse (device)\": \"devmausnik\",\n",
    "    \"screen\": \"skrenik\",\n",
    "    \"cable\": \"kabelik\",\n",
    "    \"remote\": \"remotik\",\n",
    "\n",
    " \"fast\": \"yipnik\",\n",
    "    \"slow\": \"drounik\",\n",
    "    \"old\": \"oldnik\",\n",
    "    \"new\": \"nywik\",\n",
    "    \"young\": \"yunggik\",\n",
    "    \"strong\": \"stronkik\",\n",
    "    \"weak\": \"wiknik\",\n",
    "    \"clean\": \"klinnek\",\n",
    "    \"dirty\": \"durtnik\",\n",
    "    \"rich\": \"ricnik\",\n",
    "    \"poor\": \"poornik\",\n",
    "    \"hard\": \"hardik\",\n",
    "    \"easy\": \"easik\",\n",
    "    \"happy\": \"zibble\",\n",
    "    \"sad\": \"glumby\",\n",
    "    \"funny\": \"funik\",\n",
    "    \"serious\": \"sernik\",\n",
    "    \"loud\": \"loudnik\",\n",
    "    \"quiet\": \"quiynik\",\n",
    "    \"long\": \"lonnik\",\n",
    "    \"short\": \"shortik\",\n",
    "    \"full\": \"fullik\",\n",
    "    \"empty\": \"emptik\", \n",
    "\n",
    "  \"rice\": \"risnik\",\n",
    "    \"pasta\": \"pastik\",\n",
    "    \"pizza\": \"pizzik\",\n",
    "    \"sushi\": \"sushnik\",\n",
    "    \"hamburger\": \"hambrik\",\n",
    "    \"sandwich\": \"sandvik\",\n",
    "    \"salad\": \"saladik\",\n",
    "    \"milk\": \"milnik\",\n",
    "    \"juice\": \"juicik\",\n",
    "    \"wine\": \"winik\",\n",
    "    \"water\": \"plibnob\",\n",
    "    \"ice\": \"aisnik\",\n",
    "    \"butter\": \"buttrik\",\n",
    "    \"oil\": \"oylnik\",\n",
    "    \"sugar\": \"sugrik\",\n",
    "    \"honey\": \"honik\",\n",
    "    \"salt\": \"salkik\",\n",
    "    \"pepper\": \"peppik\",\n",
    "\n",
    " \"tree\": \"grobble\",\n",
    "    \"bush\": \"bushik\",\n",
    "    \"flower\": \"flornik\",\n",
    "    \"leaf\": \"leevnik\",\n",
    "    \"grass\": \"gribbl\",\n",
    "    \"rock\": \"snigg\",\n",
    "    \"mountain\": \"montik\",\n",
    "    \"hill\": \"hillik\",\n",
    "    \"field\": \"fieldik\",\n",
    "    \"river\": \"ribblik\",\n",
    "    \"lake\": \"laknik\",\n",
    "    \"pond\": \"pondik\",\n",
    "    \"sea\": \"seanik\",\n",
    "    \"beach\": \"beechik\",\n",
    "    \"desert\": \"desnik\",\n",
    "    \"island\": \"islnik\",\n",
    "\"ticket\": \"tickik\",\n",
    "    \"passport\": \"passnik\",\n",
    "    \"luggage\": \"luggik\",\n",
    "    \"map\": \"mapnik\",\n",
    "    \"travel\": \"travnik\",\n",
    "    \"holiday\": \"holidik\",\n",
    "    \"trip\": \"tripnik\",\n",
    "    \"journey\": \"jurnik\",\n",
    "    \"visit\": \"visnik\",\n",
    "    \"arrive\": \"arrivnik\",\n",
    "    \"leave\": \"leavik\",\n",
    "    \"wifi\": \"wifik\",\n",
    "    \"username\": \"usermik\",\n",
    "    \"password\": \"passwik\",\n",
    "    \"account\": \"accounik\",\n",
    "    \"login\": \"logik\",\n",
    "    \"logout\": \"logautik\",\n",
    "    \"website\": \"websik\",\n",
    "    \"app\": \"appnik\",\n",
    "    \"download\": \"downik\",\n",
    "    \"upload\": \"upnik\",\n",
    "    \"link\": \"linkik\",\n",
    "    \"hashtag\": \"hashnik\",\n",
    "    \"gas\": \"gazzik\",\n",
    "    \"yield\": \"yielnik\",\n",
    "    \"farm\": \"farmik\",\n",
    "    \"stake\": \"steykik\",\n",
    "    \"mint\": \"mintik\",\n",
    "    \"swap\": \"swappik\",\n",
    "    \"bridge\": \"brijik\",\n",
    "    \"governance\": \"govnik\",\n",
    "    \"dao\": \"daonik\",\n",
    "    \"wallet\": \"blimbor\",\n",
    "    \"seed phrase\": \"seedfrik\",\n",
    "    \"burn\": \"burnik\",\n",
    "    \"claim\": \"claimik\",\n",
    "    \"snapshot\": \"snapik\",\n",
    "    \"vault\": \"vaultik\",\n",
    "    \"tokenomics\": \"toknomik\",\n",
    "    \"angry\": \"blurg\",\n",
    "    \"afraid\": \"afradik\",\n",
    "    \"ashamed\": \"ashamnik\",\n",
    "    \"excited\": \"zipzip\",\n",
    "    \"curious\": \"qurinik\",\n",
    "    \"brave\": \"bravik\",\n",
    "    \"hopeful\": \"hopnik\",\n",
    "    \"calm\": \"calmik\"\n",
    "    \n",
    "}\n",
    "\n",
    "\n",
    "GNOME_TO_EN = {v: k for k, v in EN_TO_GNOME.items()}\n",
    "\n",
    "def english_to_gnome(phrase):\n",
    "    # Handle punctuation\n",
    "    import re\n",
    "    phrase = re.sub(r\"[.,!?]\", \"\", phrase)\n",
    "    words = phrase.lower().split()\n",
    "    gnome_words = []\n",
    "    skip_next = False\n",
    "    for i, w in enumerate(words):\n",
    "        if skip_next:\n",
    "            skip_next = False\n",
    "            continue\n",
    "        # Check for 2-word (or more) phrases, longest match\n",
    "        found = False\n",
    "        for n in range(3, 0, -1):  # up to 3-word phrases\n",
    "            if i + n <= len(words):\n",
    "                phrase_candidate = \" \".join(words[i:i+n])\n",
    "                if phrase_candidate in EN_TO_GNOME:\n",
    "                    gnome_words.append(EN_TO_GNOME[phrase_candidate])\n",
    "                    skip_next = n - 1\n",
    "                    found = True\n",
    "                    break\n",
    "        if not found:\n",
    "            gnome_words.append(EN_TO_GNOME.get(w, w + \"zz\"))\n",
    "    return \" \".join(gnome_words)\n",
    "\n",
    "def gnome_to_english(phrase):\n",
    "    words = phrase.replace(\"znok?\", \"\").split()\n",
    "    english_words = []\n",
    "    for w in words:\n",
    "        base_w = w.replace(\"zz\", \"\")\n",
    "        if w in GNOME_TO_EN:\n",
    "            english_words.append(GNOME_TO_EN[w])\n",
    "        elif base_w in GNOME_TO_EN:\n",
    "            english_words.append(GNOME_TO_EN[base_w])\n",
    "        else:\n",
    "            english_words.append(w)\n",
    "    if \"znok?\" in phrase:\n",
    "        english_words.append(\"?\")\n",
    "    return \" \".join(english_words).capitalize()\n",
    "\n",
    "# ---- Example Usage ----\n",
    "\n",
    "# English to Gnome\n",
    "print(english_to_gnome(\"pump that shit\"))\n",
    "\n",
    "# Gnome to English\n",
    "print(gnome_to_english(\"wizzik glibb blib magik potik prezz blib questnik\"))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8f4096f3-f813-407b-997f-4d408d1cb7ee",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5b968b87-2afa-433b-ae46-9eb3451527f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7a5cbae69a5240199c06daa3b6324873",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Text(value='', description='English:', layout=Layout(width='80%'), placeholder='Type English to translate...')"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0e91ef4ef0de48ad810a05ec4678581e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Output()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import ipywidgets as widgets\n",
    "from IPython.display import display, HTML\n",
    "\n",
    "def english_to_gnome(phrase):\n",
    "    import re\n",
    "    phrase = re.sub(r\"[.,!?]\", \"\", phrase)\n",
    "    words = phrase.lower().split()\n",
    "    gnome_words = []\n",
    "    skip_next = False\n",
    "    for i, w in enumerate(words):\n",
    "        if skip_next:\n",
    "            skip_next = False\n",
    "            continue\n",
    "        if i < len(words) - 1 and f\"{w} {words[i+1]}\" in EN_TO_GNOME:\n",
    "            gnome_words.append(EN_TO_GNOME[f\"{w} {words[i+1]}\"])\n",
    "            skip_next = True\n",
    "        else:\n",
    "            gnome_words.append(EN_TO_GNOME.get(w, w + \"zz\"))\n",
    "    return \" \".join(gnome_words)\n",
    "\n",
    "def to_fraktur(text):\n",
    "    normal = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n",
    "    fraktur = [\n",
    "        \"𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ\",\n",
    "        \"𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷\"\n",
    "    ]\n",
    "    mapping = {c: f for c, f in zip(normal, fraktur[0] + fraktur[1])}\n",
    "    return ''.join(mapping.get(ch, ch) for ch in text)\n",
    "\n",
    "def translate_and_display(english):\n",
    "    gnome = english_to_gnome(english)\n",
    "    fraktur_gnome = to_fraktur(gnome)\n",
    "    display(HTML(f\"<div style='font-size:2em; color:#2b2b2b;'>{fraktur_gnome}</div>\"))\n",
    "\n",
    "# --- Widget setup ---\n",
    "text_input = widgets.Text(\n",
    "    value='',\n",
    "    placeholder='Type English to translate...',\n",
    "    description='English:',\n",
    "    disabled=False,\n",
    "    layout=widgets.Layout(width='80%')\n",
    ")\n",
    "\n",
    "output = widgets.Output()\n",
    "\n",
    "def on_text_change(change):\n",
    "    with output:\n",
    "        output.clear_output()\n",
    "        translate_and_display(change['new'])\n",
    "\n",
    "text_input.observe(on_text_change, names='value')\n",
    "\n",
    "display(text_input, output)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "275ba301-0344-4a9a-94aa-966aec77242b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
